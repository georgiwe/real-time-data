{"version":3,"sources":["webpack:///webpack/bootstrap e573482bbdd7a1fc68b5","webpack:///./src/main.js","webpack:///./src/GameContainer.js","webpack:///./src/util/cookie.js","webpack:///./src/SnakeGame.js","webpack:///./src/Piece.js","webpack:///./src/Food.js","webpack:///./src/Bot.js","webpack:///./src/Particle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;AC/EA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,oBAAoB,EAAE;AACpE,2CAA2C,oCAAoC,EAAE;AACjF,6CAA6C,sCAAsC,EAAE;AACrF,6CAA6C,sCAAsC,EAAE;AACrF,8CAA8C,uCAAuC,EAAE;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;ACnPA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,GAAG;;AAEH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,0CAA0C;AAC1C,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC1CA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,0DAA0D;;AAEhF;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sEAAsE,qBAAqB;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA,uB;;;;;;ACzgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sB;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA,qB;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,0B","file":"output.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e573482bbdd7a1fc68b5","/*global $, require*/\r\n\r\nvar el;\r\n\r\n//Game Container\r\nvar GameContainer = require('./GameContainer');\r\n\r\n//Snake Game\r\nvar SnakeGame = require('./SnakeGame');\r\n\r\n/**\r\n * Attach ResponsiveSnake Game To Window\r\n * @type {{game: GameContainer, start: start, bindEvents: bindEvents}}\r\n */\r\nvar ResponsiveSnake = {\r\n  getNew: function(opts) {\r\n    opts = $.extend(opts, {\r\n      inst : new SnakeGame(opts)\r\n    });\r\n\r\n    el = Everlive.$;\r\n\r\n    // el.subscribeBroadcast('gamestate', function(msg) {\r\n    //   var inst = CircularJSON.parse(msg.data.circStr);\r\n    //   opts.inst = inst;\r\n    //   ResponsiveSnake.game = new GameContainer(opts);\r\n    // });\r\n\r\n    this.game = new GameContainer(opts);\r\n    return this.game;\r\n  },\r\n\r\n  /**\r\n   * Initialize a new Game\r\n   */\r\n  // game : new GameContainer({\r\n  //   inst : new SnakeGame()\r\n  // }),\r\n\r\n  /**\r\n   * Start Game and Bind Window Events\r\n   */\r\n  start : function (options) {\r\n    if (options) {\r\n      ResponsiveSnake.game.inst.setOptions(options);\r\n    }\r\n\r\n    ResponsiveSnake.game.start();\r\n    ResponsiveSnake.bindEvents();\r\n  },\r\n\r\n  /**\r\n   * Bind Window Events\r\n   */\r\n  bindEvents : function () {\r\n    if (this.game.started) {\r\n      //Pause Game on Window Blur\r\n      $(window)\r\n        .focus(function() {\r\n          if (this.game.started) {\r\n            this.game.play.bind(this.game);\r\n          }\r\n        }.bind(this))\r\n        .blur(function() {\r\n          if (this.game.started) {\r\n            this.game.pause.bind(this.game);\r\n          }\r\n        }.bind(this));\r\n    }\r\n  }\r\n};\r\n\r\n//Handle Module Exports\r\nif (typeof module !== 'undefined' && !window) {\r\n  //Export to NODE\r\n  module.exports = ResponsiveSnake;\r\n} else if (typeof window !== 'undefined') {\r\n  //Export To Browser\r\n  window.ResponsiveSnake = ResponsiveSnake;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","/*global module, require, $ */\r\nvar el;\r\n\r\nvar cookie = require('./util/cookie');\r\n\r\n/**\r\n * Basic Game Object\r\n * @param options\r\n * @constructor\r\n */\r\nvar GameContainer = function (options) {\r\n  var self = this;\r\n  this.started = false;\r\n  this.disabled = false;\r\n  this.score = 0;\r\n  this.settings = $.extend({ inst : false }, options);\r\n  this.inst = this.settings.inst;\r\n\r\n  if (!this.inst) {\r\n    throw new Error(\"A Game Instance Must Be Supplied\");\r\n  }\r\n\r\n  this.ui = {\r\n    canvas : $('#' + options.canvasId),\r\n    scoreboard : $('#score span', '#scoreboard'),\r\n    userScore : $('#hi-score span','#scoreboard'),\r\n    botScore : $('#bot-hi-score span', '#scoreboard')\r\n  };\r\n\r\n  this.keys = {\r\n    user : this.inst.name + '_user',\r\n    bot : this.inst.name + '_bot'\r\n  };\r\n\r\nthis.$canvas = this.inst.$canvas;\r\n  this.updateScoreboard();\r\n  this.bindEvents();\r\n};\r\n\r\n/**\r\n * Initialize The Game Session\r\n */\r\nGameContainer.prototype.start = function () {\r\n  this.started = true;\r\n  this.inst.start(this.settings);\r\n};\r\n\r\nGameContainer.prototype.play = function () {\r\n  this.inst.play(true);\r\n};\r\n\r\n/**\r\n * Bind The Game Events\r\n */\r\nGameContainer.prototype.bindEvents = function () {\r\n  $(document).on('keydown', this.onKeydown.bind(this));\r\n  $(window).on('resize', this.onResize.bind(this));\r\n\r\n  this.inst.onRestart = this.onGameRestart.bind(this);\r\n  this.inst.onScore = this.onGameScore.bind(this);\r\n\r\n  this.bindTouchEvents();\r\n};\r\n\r\n\r\n/**\r\n * Bind The Touch Events\r\n */\r\nGameContainer.prototype.bindTouchEvents = function() {\r\n  var self = this,\r\n    queueFunc = this.inst.queueDirection.bind(this.inst);\r\n\r\n  this.ui.canvas.on('touchmove', function(e) { e.preventDefault(); });\r\n  this.ui.canvas.on(\"swipeUp\", function() { queueFunc(self.inst.DIRECTIONS.UP); });\r\n  this.ui.canvas.on(\"swipeDown\", function() { queueFunc(self.inst.DIRECTIONS.DOWN); });\r\n  this.ui.canvas.on(\"swipeLeft\", function() { queueFunc(self.inst.DIRECTIONS.LEFT); });\r\n  this.ui.canvas.on(\"swipeRight\", function() { queueFunc(self.inst.DIRECTIONS.RIGHT); });\r\n};\r\n\r\n/**\r\n * Resume/Play Game\r\n */\r\nGameContainer.prototype.play = function () {\r\n  this.started = true;\r\n  this.inst.play();\r\n};\r\n\r\n/**\r\n * Pause Current Game\r\n */\r\nGameContainer.prototype.pause = function () {\r\n  this.started = false;\r\n  this.inst.pause();\r\n};\r\n\r\n/**\r\n * Display Canvas and Start Game\r\n */\r\nGameContainer.prototype.enableGame = function () {\r\n  this.disabled = false;\r\n  this.$canvas.show();\r\n  this.play();\r\n};\r\n\r\n/**\r\n * Hide Canvas and Pause Game\r\n */\r\nGameContainer.prototype.disableGame = function () {\r\n  this.disabled = true;\r\n  this.$canvas.hide();\r\n  this.pause();\r\n};\r\n\r\n/**\r\n * Persist Current Game Session to Cookie\r\n * @param score\r\n */\r\nGameContainer.prototype.saveGame = function (score) {\r\n  var hiScore = cookie.read(this.keys.user) || 0;\r\n  if (this.inst.bot && this.inst.bot.enabled) {\r\n    var botScore = cookie.read(this.keys.bot) || 0;\r\n    if (botScore && score < botScore) {\r\n      score = botScore;\r\n    }\r\n    cookie.create(this.keys.bot, score);\r\n  } else if (!hiScore || (hiScore && score > hiScore)) {\r\n    cookie.create(this.keys.user, score);\r\n  }\r\n};\r\n\r\n/**\r\n * Update Current Scoreboard With New Score\r\n * @param score\r\n */\r\nGameContainer.prototype.updateScoreboard = function (score) {\r\n  this.updateScore(score || 0);\r\n\r\n  this.ui.userScore.text(cookie.read(this.keys.user) || 0);\r\n\r\n  if (this.inst.bot) {\r\n    this.ui.botScore.text(cookie.read(this.keys.bot) || 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Update Actual Score and Flash In\r\n * @param score\r\n */\r\nGameContainer.prototype.updateScore = function (score) {\r\n  var scoreboard = this.ui.scoreboard;\r\n    scoreboard.text(score).addClass('flash');\r\n  setTimeout(function () {\r\n    scoreboard.removeClass('flash');\r\n  }, 1000)\r\n};\r\n\r\n/**\r\n * On Game Score\r\n * @param score\r\n */\r\nGameContainer.prototype.onGameScore = function (score) {\r\n  this.updateScore(score);\r\n};\r\n\r\n/**\r\n * Restart Current Game\r\n * @param score\r\n */\r\nGameContainer.prototype.onGameRestart = function (score) {\r\n  this.saveGame(score);\r\n  this.updateScoreboard();\r\n};\r\n\r\n/**\r\n * Toggle Game Session\r\n */\r\nGameContainer.prototype.toggleGame = function () {\r\n  if (this.disabled) {\r\n    this.enableGame();\r\n  } else {\r\n    this.disableGame();\r\n  }\r\n};\r\n\r\n/**\r\n * Handle Window Resize\r\n */\r\nGameContainer.prototype.onResize = function () {\r\n  if (typeof this.inst.onResize === 'function') {\r\n    this.inst.onResize(window.innerHeight, window.innerWidth);\r\n  }\r\n};\r\n\r\n/**\r\n * Handle KeyDown Events\r\n * @param event\r\n */\r\nGameContainer.prototype.onKeydown = function (event) {\r\n  if (this.settings.userId !== window.currentUserId) {\r\n    return;\r\n  }\r\n  switch (event.keyCode) {\r\n    case 38 :\r\n      this.inst.queueDirection(this.inst.DIRECTIONS.UP);\r\n      break;\r\n    case 40 :\r\n      this.inst.queueDirection(this.inst.DIRECTIONS.DOWN);\r\n      break;\r\n    case 37 :\r\n      this.inst.queueDirection(this.inst.DIRECTIONS.LEFT);\r\n      break;\r\n    case 39 :\r\n      this.inst.queueDirection(this.inst.DIRECTIONS.RIGHT);\r\n      break;\r\n    case 187: //+\r\n      this.inst.increaseFPS(1);\r\n      break;\r\n    case 189: //-\r\n      this.inst.decreaseFPS(1);\r\n      break;\r\n    case 66 :\r\n      if (this.inst.bot) {\r\n        this.inst.bot.enable();\r\n      }\r\n      break;\r\n    case 82 : //r\r\n      this.inst.restart();\r\n      break;\r\n    case 79 : //o\r\n      this.toggleGame();\r\n      break;\r\n    case 32 : //space\r\n      if (!this.disabled) {\r\n        if (this.started) {\r\n          this.pause();\r\n        } else {\r\n          this.play();\r\n        }\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nmodule.exports = GameContainer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GameContainer.js\n// module id = 1\n// module chunks = 0","/*global module*/\r\n\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Create a new cookie\r\n   * @param name\r\n   * @param value\r\n   * @param days\r\n   */\r\n  create : function (name, value, days) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toGMTString();\r\n    //'secure', subdomain '.'?\r\n    document.cookie = name + \"=\" + value + \"; \" + expires;\r\n  },\r\n\r\n  /**\r\n   * Read an existing cookie\r\n   * @param name\r\n   * @returns {*}\r\n   */\r\n  read : function (name) {\r\n    name = name + \"=\";\r\n    var cookies = document.cookie.split(';');\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      if (cookie.indexOf(name) === 0) {\r\n        return cookie.substring(name.length, cookie.length);\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Remove an existing cookie\r\n   * @param name\r\n   */\r\n  remove : function(name) {\r\n    this.create(name,\"\",-1);\r\n  }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/cookie.js\n// module id = 2\n// module chunks = 0","/*global requestAnimationFrame, module, require, $ */\r\nvar el;\r\n\r\nvar colorMap = ['#E74C3C', '#3498DB', '#27AE60', '#7D3C98', '#F1C40F', '#273746'];\r\n\r\nvar Piece = require('./Piece'),\r\n Food = require('./Food'),\r\n Bot = require('./Bot'),\r\n Particle = require('./Particle');\r\n\r\n/**\r\n * Snake Game\r\n * @param options\r\n * @constructor\r\n */\r\nvar Snake = function(options) {\r\n  var self = this;\r\n  this.options = options || {};\r\n\r\n  this.score = 0;\r\n  this.started = false;\r\n  this.fps = 15;\r\n  this.gravity = 1;\r\n  this.particles = [];\r\n  this.particleCount = 150;\r\n\r\n  this.throttledDraw = _.throttle(Snake.prototype.throttledDraw, 1000 / 12);\r\n\r\n  this.$canvas = $('#' + (options.canvasId || ''));\r\n  this.$canvas.css({ 'background-color': 'transparent' });\r\n  this.canvas = this.$canvas[0];\r\n  this.context = this.canvas.getContext('2d');\r\n  el = Everlive.$;\r\n\r\n  if (this.$canvas.data('full-screen')) {\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n  }\r\n\r\n  this.animationTimeout = null;\r\n\r\n  this.pieces = [];\r\n  this.food = [];\r\n\r\n  this.currentFoodColor = null;\r\n\r\n  this.settings = $.extend({\r\n    snakePixels    : 14,\r\n    snakeSize      : 3,\r\n    foodColor      : null,\r\n    headColor      : 'rgba(0,0,0,0)',\r\n    bot            : false,\r\n    timeout        : 1000,\r\n    explosion      : true\r\n  }, options);\r\n\r\n  this.topic = 'gamestate';\r\n  if (this.settings.roomName) {\r\n    this.topic += '.' + this.settings.roomName;\r\n  }\r\n\r\n  this.DIRECTIONS = {\r\n    UP   : 0,\r\n    DOWN : 2,\r\n    LEFT  : 1,\r\n    RIGHT : 3\r\n  };\r\n\r\n  //Bot Support\r\n  this.bot = new Bot({directions : this.DIRECTIONS, enabled : this.settings.bot});\r\n\r\n  this.direction = this.DIRECTIONS.RIGHT;\r\n  this.directionQueue = [];\r\n};\r\n\r\n\r\n/**\r\n * Set Options For Current Snake\r\n * @param options\r\n * @returns {*}\r\n */\r\nSnake.prototype.setOptions = function(options) {\r\n  $.extend(this.settings, options);\r\n  if (this.settings.bot === true) {\r\n    this.bot.enable();\r\n  }\r\n};\r\n\r\n/**\r\n * Reset Game Session Variables\r\n */\r\nSnake.prototype.reset = function() {\r\n  this.started = false;\r\n  this.score = 0;\r\n  this.directionQueue = [];\r\n  this.direction = this.DIRECTIONS.RIGHT;\r\n  this.pieces = [];\r\n  this.food = [];\r\n  this.particles = [];\r\n  this.gravity = 1;\r\n  this.fps = 15;\r\n\r\n  if (this.animationTimeout) {\r\n    clearTimeout(this.animationTimeout);\r\n  }\r\n};\r\n\r\n/**\r\n * Restart Game\r\n */\r\nSnake.prototype.restart = function () {\r\n  if (typeof this.onRestart === 'function') {\r\n    this.onRestart(this.score);\r\n  }\r\n  this.reset();\r\n  this.start();\r\n};\r\n\r\n/**\r\n * Resume/Play Game\r\n */\r\nSnake.prototype.play = function(skipSate) {\r\n  if (!skipSate) {\r\n    this.started = true;\r\n  }\r\n  if (typeof this.animationLoop === 'function') {\r\n    this.animationLoop();\r\n  }\r\n};\r\n\r\n/**\r\n * Pause Current Game\r\n */\r\nSnake.prototype.pause = function() {\r\n  this.started = false;\r\n};\r\n\r\n/**\r\n * Lose Current Game\r\n */\r\nSnake.prototype.lose = function() {\r\n  this.pause();\r\n  setTimeout(this.restart.bind(this), this.settings.timeout);\r\n};\r\n\r\n/**\r\n * Add Direction To The Direction Queue\r\n * @param direction\r\n */\r\nSnake.prototype.queueDirection = function(direction) {\r\n  if (this.bot.enabled === true) this.bot.disable();\r\n  //Don't Allow The Same Moves To Stack Up\r\n  if (this.started && this.directionQueue[this.directionQueue.length - 1] !== direction) {\r\n    this.directionQueue.push(direction);\r\n  }\r\n};\r\n\r\n/**\r\n * Handle Window Resize\r\n * @param height\r\n * @param width\r\n */\r\nSnake.prototype.onResize = function(height, width) {\r\n  this.canvas.width = width;\r\n  this.canvas.height = height;\r\n};\r\n\r\n/**\r\n * Create Snake\r\n */\r\nSnake.prototype.create = function(gamestate) {\r\n  var self = this;\r\n  if (gamestate) {\r\n    self.pieces.splice(0, self.pieces.length);\r\n    gamestate.pieces.forEach(function(pieceData) {\r\n      pieceData.color = colorMap[self.options.userId];\r\n      self.pieces.push(new Piece(pieceData));\r\n    });\r\n  } else {\r\n    var offset = Math.round((Math.random() * 20));\r\n    for (var x = 0; x < this.settings.snakeSize; x++) {\r\n      this.pieces.push(new Piece({\r\n        x : 0,\r\n        y : 20 + offset,\r\n        width : this.settings.snakePixels\r\n      }));\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Create a piece of food\r\n */\r\nSnake.prototype.createFood = function(gamestate) {\r\n  if (gamestate) {\r\n    var self = this;\r\n    self.food.splice(0, self.food.length);\r\n    gamestate.food.forEach(function(fd) {\r\n      fd.color = colorMap[self.options.userId];\r\n      self.food.push(new Food(fd));\r\n    });\r\n    return;\r\n  }\r\n  \r\n  this.food.push(new Food({\r\n    x : Math.round(Math.random() * (this.canvas.width - this.settings.snakePixels) / this.settings.snakePixels),\r\n    y : Math.round(Math.random() * (this.canvas.height - this.settings.snakePixels) / this.settings.snakePixels),\r\n    width : this.settings.snakePixels,\r\n    color : this.getFoodColor(),\r\n    border : '#000'\r\n  }));\r\n};\r\n\r\n/**\r\n * Get Current Food Color\r\n * @returns {*}\r\n */\r\nSnake.prototype.getFoodColor = function() {\r\n  if (this.settings.foodColor) {\r\n    return this.settings.foodColor;\r\n  }\r\n\r\n  this.currentFoodColor = 'rgb(' +\r\n    parseInt(Math.random() * 255) + ',' +\r\n    parseInt(Math.random() * 255) + ',' +\r\n    parseInt(Math.random() * 255) + ')';\r\n\r\n  return this.currentFoodColor;\r\n};\r\n\r\n/**\r\n * Get Snake Direction\r\n * @returns {*}\r\n */\r\nSnake.prototype.getDirection = function () {\r\n  var direction;\r\n  while (typeof direction === 'undefined' || (this.direction - direction + 4) % 4 === 2) {\r\n    if (this.directionQueue.length > 0) {\r\n      //Shift through the Queue\r\n      direction = this.directionQueue.shift();\r\n    }\r\n    else {\r\n      direction = this.direction;\r\n    }\r\n  }\r\n  return direction;\r\n};\r\n\r\n/**\r\n * Check if Coordinates Cause Collision\r\n * @param x\r\n * @param y\r\n * @returns {boolean}\r\n */\r\nSnake.prototype.isWallCollision = function(x,y) {\r\n  var isTopCollision = y === -1,\r\n    isRightCollision = x >= this.canvas.width / this.settings.snakePixels,\r\n    isBottomCollision = y >= this.canvas.height / this.settings.snakePixels,\r\n    isLeftCollision = x === -1;\r\n\r\n  return isTopCollision || isRightCollision  || isBottomCollision || isLeftCollision;\r\n};\r\n\r\n/**\r\n * Check If \"Safe\" Collision\r\n * @param x\r\n * @param y\r\n * @returns {boolean}\r\n */\r\nSnake.prototype.isSelfCollision = function(x,y) {\r\n  for (var i = 0; i < this.pieces.length; i++) {\r\n    if (this.pieces[i].x == x && this.pieces[i].y == y) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Check if Food Collision\r\n * @param x\r\n * @param y\r\n * @returns {boolean}\r\n */\r\nSnake.prototype.isFoodCollision = function(x,y) {\r\n  var found = false;\r\n  this.food.forEach(function(food) {\r\n    if ((x == food.x && y == food.y)) {\r\n      found = true;\r\n    }\r\n  });\r\n  return found;\r\n};\r\n\r\n/**\r\n * Remove Piece Of Food\r\n * @param x\r\n * @param y\r\n */\r\nSnake.prototype.removeFood = function(x,y) {\r\n  var self = this;\r\n  this.food.forEach(function(food,ix) {\r\n    if ((x == food.x && y == food.y)) {\r\n      self.food.splice(ix);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Create Particle Explosion\r\n * @param x\r\n * @param y\r\n */\r\nSnake.prototype.createExplosion = function(x,y) {\r\n  for (var i = 0; i < this.particleCount; i++) {\r\n    var particle = new Particle({\r\n      x : x * this.settings.snakePixels,\r\n      y : y * this.settings.snakePixels,\r\n      color : this.settings.foodColor ? this.settings.foodColor : this.currentFoodColor,\r\n      decay : true\r\n    });\r\n    this.particles.push(particle);\r\n  }\r\n};\r\n\r\n/**\r\n * Score a point and call onScore\r\n */\r\nSnake.prototype.scorePoint = function() {\r\n  this.score++;\r\n  if (this.onScore && typeof this.onScore === 'function') {\r\n    this.onScore(this.score);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Increase Snake FPS draw loop\r\n */\r\nSnake.prototype.increaseFPS = function(amount) {\r\n  this.fps += amount;\r\n};\r\n\r\n/**\r\n * Decrease Snake FPS draw loop\r\n */\r\nSnake.prototype.decreaseFPS = function(amount) {\r\n  if (this.fps - amount > 0) {\r\n    this.fps -= amount;\r\n  }\r\n};\r\n\r\n/**\r\n * Snake Draw Loop\r\n */\r\nSnake.prototype.drawLoop = function() {\r\n  var self = this;\r\n\r\n  //Clear Canvas Context Before Redraw\r\n  this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n  if (!this.pieces.length) {\r\n    return;\r\n  }\r\n\r\n  var headX = this.pieces[0].x;\r\n  var headY = this.pieces[0].y;\r\n\r\n  //reset direction\r\n  this.direction = this.getDirection();\r\n\r\n  if (this.bot && this.bot.enabled === true) {\r\n    this.direction = this.bot.getNextMove(this.pieces, this.food[0], {x : headX, y : headY}, this.direction, this.DIRECTIONS);\r\n  }\r\n\r\n  switch(this.direction) {\r\n    case this.DIRECTIONS.LEFT:\r\n      headX--;\r\n      break;\r\n    case this.DIRECTIONS.RIGHT:\r\n      headX++;\r\n      break;\r\n    case this.DIRECTIONS.UP:\r\n      headY--;\r\n      break;\r\n    case this.DIRECTIONS.DOWN:\r\n      headY++;\r\n      break;\r\n  }\r\n\r\n  if (this.isWallCollision(headX, headY) || this.isSelfCollision(headX, headY)) {\r\n    this.lose();\r\n  }\r\n\r\n  if (this.started) {\r\n    var headShift = null;\r\n    var food = this.isFoodCollision(headX, headY);\r\n\r\n    if (food) {\r\n      this.scorePoint();\r\n      //Increase Frames Per Second\r\n      if (this.score % 2) {\r\n        this.fps += 0.5;\r\n      }\r\n\r\n      if (this.settings.explosion) {\r\n        this.createExplosion(headX, headY, [food.color,food.border]);\r\n      }\r\n\r\n      this.removeFood(headX, headY);\r\n      this.createFood();\r\n\r\n      //create new snake head\r\n      headShift = new Piece({\r\n        x : headX,\r\n        y : headY,\r\n        width : this.settings.snakePixels\r\n      });\r\n\r\n    } else {\r\n      //Pop head tail to become new  head\r\n      headShift = this.pieces.pop();\r\n      headShift.updatePosition(headX, headY);\r\n    }\r\n    //move snakeTail to snakeHead\r\n    this.pieces.unshift(headShift);\r\n  }\r\n\r\n  //Draw Snake\r\n  this.pieces.forEach(function(piece,ix) {\r\n    piece.draw(self.context, ix === 0 ? self.settings.headColor : null);\r\n  });\r\n\r\n  //Draw Food\r\n  this.food.forEach(function(food) {\r\n    food.draw(self.context);\r\n  });\r\n};\r\n\r\nSnake.prototype.throttledDraw = function() {\r\n  if (this.options.userId !== window.currentUserId && window.currentUserId !== -1) {\r\n    return;\r\n  }\r\n  \r\n  var self = this;\r\n  var foodClone = self.food.map(function(f) {\r\n    return { x: f.x, y: f.y };\r\n  });\r\n  var dataToSend = {\r\n    userId: self.options.userId,\r\n    gamestate: {\r\n      pieces: self.pieces.map(function(p) {\r\n        return {\r\n          x: p.x,\r\n          y: p.y\r\n        };\r\n      }),\r\n      food: foodClone\r\n    }\r\n  };\r\n  el.broadcast(this.topic, dataToSend);\r\n};\r\n\r\n/**\r\n * Snake Animation Loop\r\n */\r\nSnake.prototype.animationLoop = function() {\r\n  if (this.started) {\r\n    var self = this;\r\n    // if (this.animationTimeout) {\r\n    //   clearTimeout(this.animationTimeout);\r\n    // }\r\n    //Ensure FPS\r\n    // this.animationTimeout = setTimeout(function() {\r\n      self.drawLoop.call(self);\r\n      self.particleLoop.call(self);\r\n      // window.requestAnimationFrame(self.animationLoop.bind(self));\r\n      self.throttledDraw.call(self);\r\n\r\n    // }, 1000 / this.fps);\r\n  }\r\n};\r\n\r\n/**\r\n * Start Snake Game\r\n */\r\nSnake.prototype.start = function() {\r\n  var self = this;\r\n  \r\n  this.started = true;\r\n  this.create();\r\n  this.createFood();\r\n  this.play();\r\n};\r\n\r\n/**\r\n * Snake Particle Loop\r\n */\r\nSnake.prototype.particleLoop = function() {\r\n  if (this.particles) {\r\n    var self = this;\r\n    var particles = [];\r\n\r\n    this.particles.forEach(function(particle) {\r\n      //Apply Some Gravity\r\n      particle.velocity.y += self.gravity;\r\n\r\n      particle.x += particle.velocity.x;\r\n      particle.y += particle.velocity.y;\r\n\r\n      particle.draw(self.context);\r\n\r\n      if (particle.y < self.canvas.height * 1.1) {\r\n        particles.push(particle);\r\n      }\r\n    });\r\n    this.particles = particles;\r\n  }\r\n};\r\n\r\n\r\nmodule.exports = Snake;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/SnakeGame.js\n// module id = 3\n// module chunks = 0","/**\r\n * Piece Class\r\n * Creating a simple 2d object\r\n * with an inner color and a border\r\n */\r\nfunction Piece(options) {\r\n  this.options = options || {};\r\n  this.width = this.options.width ? this.options.width : 14;\r\n  this.x = this.options.x ? this.options.x : 0;\r\n  this.y = this.options.y ? this.options.y : 0;\r\n  this.color = this.options.color || '#FFF';\r\n  this.border = this.options.border || '#000';\r\n}\r\n\r\n/**\r\n * Basic Position Updater\r\n * @param x\r\n * @param y\r\n */\r\nPiece.prototype.updatePosition = function (x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n};\r\n\r\n/**\r\n * Draw Piece To Canvas\r\n * @param context\r\n * @param updateColor\r\n */\r\nPiece.prototype.draw = function (context, updateColor) {\r\n  if (typeof updateColor === 'string') {\r\n    context.fillStyle = updateColor;\r\n  } else {\r\n    context.fillStyle = this.color;\r\n  }\r\n  context.strokeStyle = this.border;\r\n  context.fillRect(this.x * this.width, this.y * this.width, this.width, this.width);\r\n  context.strokeRect(this.x * this.width, this.y * this.width, this.width, this.width);\r\n};\r\n\r\nmodule.exports = Piece;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Piece.js\n// module id = 4\n// module chunks = 0","/**\r\n * Food Class\r\n * Creating a simple 2d object\r\n * with an inner color and a border\r\n */\r\nfunction Food(options) {\r\n  this.options = options || {};\r\n  this.width = this.options.width ? this.options.width : 14;\r\n  this.x = this.options.x ? this.options.x : 0;\r\n  this.y = this.options.y ? this.options.y : 0;\r\n\r\n  this.border = this.options.border ? this.options.border : false;\r\n  this.color = this.options.color ? this.options.color : \"#FFF\";\r\n}\r\n\r\n/**\r\n * Draw Food Onto the Canvas\r\n * @param context\r\n */\r\nFood.prototype.draw = function (context) {\r\n  context.fillStyle = this.color;\r\n\r\n  if (this.border) {\r\n    context.strokeStyle = this.border;\r\n  }\r\n\r\n  context.fillRect(this.x * this.width, this.y * this.width, this.width, this.width);\r\n  context.strokeRect(this.x * this.width, this.y * this.width, this.width, this.width);\r\n};\r\n\r\nmodule.exports = Food;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Food.js\n// module id = 5\n// module chunks = 0","/**global $*/\r\n\r\n/**\r\n * Dumb Automated Bot\r\n * Used For 2d Plane\r\n * @param options\r\n * @constructor\r\n */\r\nfunction Bot(options) {\r\n  this.options = $.extend({\r\n    enabled    : false,\r\n    //perpendicular checking\r\n    directions : {\r\n      UP    : 0,\r\n      DOWN  : 2,\r\n      LEFT  : 1,\r\n      RIGHT : 3\r\n    }\r\n  }, options);\r\n\r\n  this.enabled = this.options.enabled;\r\n}\r\n\r\n/**\r\n * Enable Bot\r\n */\r\nBot.prototype.enable = function () {\r\n  this.enabled = true;\r\n};\r\n\r\n/**\r\n * Disable Bot\r\n */\r\nBot.prototype.disable = function () {\r\n  this.enabled = false;\r\n};\r\n\r\n/**\r\n * Get The Next Move Based on the Current \"attractor\"\r\n * and the current position of the snake\r\n * @param obj\r\n * @param attractor\r\n * @param objPos\r\n * @param currentDir\r\n * @param directions\r\n * @returns {*}\r\n */\r\nBot.prototype.getNextMove = function (obj, attractor, objPos, currentDir, directions) {\r\n  var tries = 0,\r\n    head = {\r\n      x : obj[0].x,\r\n      y : obj[0].y\r\n    };\r\n\r\n  var direction = this.getPrelimDirection(head, attractor, directions);\r\n  //test preliminary move\r\n  while (!this.isMoveSafe(obj, head, currentDir, direction, directions) && tries++ <= 4) {\r\n    direction = (direction + 1) % 4; //0-3\r\n  }\r\n  return direction;\r\n};\r\n\r\n/**\r\n * Get the Preliminary Direction if in bounds\r\n * @param obj\r\n * @param attractor\r\n * @param directions\r\n * @returns {*}\r\n */\r\nBot.prototype.getPrelimDirection = function (obj, attractor, directions) {\r\n  //is object closer to x\r\n  if (Math.abs(obj.x - attractor.x) > Math.abs(obj.y - attractor.y)) {\r\n    //if object is above the attractor\r\n    return obj.x > attractor.x ? directions.LEFT : directions.RIGHT;\r\n  }\r\n  //if object is below attractor or object is at top of screen\r\n  return obj.y < attractor.y || obj.y === 0 ? directions.DOWN : directions.UP;\r\n};\r\n\r\n\r\n/**\r\n * Test The Current Move Before Issuing It\r\n * @param snake\r\n * @param head\r\n * @param currentDirection\r\n * @param newDirection\r\n * @param directions\r\n * @returns {boolean}\r\n */\r\nBot.prototype.isMoveSafe = function (snake, head, currentDirection, newDirection, directions) {\r\n  //Make Sure you are only able to go perpendicular direction\r\n  if (Math.abs(currentDirection - newDirection) === 2) return false;\r\n\r\n  switch (newDirection) {\r\n    case directions.UP :\r\n      head.y--;\r\n      break;\r\n    case directions.DOWN :\r\n      head.y++;\r\n      break;\r\n    case directions.RIGHT :\r\n      head.x++;\r\n      break;\r\n    case directions.LEFT :\r\n    default:\r\n      head.x--;\r\n  }\r\n\r\n  var isSafe = true;\r\n  snake.forEach(function (piece) {\r\n    if (piece.x === head.x && piece.y === head.y) {\r\n      isSafe = false;\r\n    }\r\n  });\r\n  return isSafe;\r\n};\r\n\r\n\r\nmodule.exports = Bot;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Bot.js\n// module id = 6\n// module chunks = 0","/**\r\n * Particle Class\r\n * @param options\r\n * @constructor\r\n */\r\nfunction Particle(options) {\r\n  this.options = options || {};\r\n  this.x = this.options.x;\r\n  this.y = this.options.y;\r\n\r\n  this.decay = (this.options.hasOwnProperty('decay') && this.options.decay);\r\n  this.life = 100;\r\n\r\n  this.velocity = {\r\n    x : -5 + Math.random() * 10,\r\n    y : -8 + Math.random() * 10\r\n  };\r\n\r\n  this.radius = parseInt(Math.random() * 5);\r\n\r\n  this.color = this.options.color ? this.options.color : this.getBW();\r\n  this.border = this.options.border ?  this.options.border : null;\r\n}\r\n\r\n/**\r\n * Get Black Or White Color With Decay\r\n * @returns {string}\r\n */\r\nParticle.prototype.getBW = function() {\r\n  var rand = ((!(Math.random()+ 0.5 | 0) === true) ? 255 : 0);\r\n  return 'rgb(' +\r\n    parseInt(rand) + ',' +\r\n    parseInt(rand) + ',' +\r\n    parseInt(rand) + ',' + (this.decay ?  this.life / 100 : \"1\") + ')';\r\n};\r\n\r\n/**\r\n * Particle Draw Onto Canvas\r\n * @param context\r\n */\r\nParticle.prototype.draw = function (context) {\r\n  //decay\r\n  if (this.decay) {\r\n    this.life = ~~(this.life *.96);\r\n    this.radius = (this.radius *.96);\r\n  }\r\n\r\n  context.fillStyle = this.color;\r\n\r\n  if (this.border) {\r\n    context.strokeStyle = this.border;\r\n  }\r\n\r\n  context.beginPath();\r\n\r\n  context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n\r\n  context.fill();\r\n  context.closePath();\r\n};\r\n\r\nmodule.exports = Particle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Particle.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}